<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[【导览机项目模板】-祝文飞]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E5%AF%BC%E8%A7%88%E6%9C%BA%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF%E3%80%91-%E7%A5%9D%E6%96%87%E9%A3%9E/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>参考GeekNews，基于RxJava2，Dagger2，Retrofit2搭建，采用MVP模式。封装了文件下载，多模收号，网络交互、数据库操作等功能；</p>
<h2 id="二、项目地址"><a href="#二、项目地址" class="headerlink" title="二、项目地址"></a>二、项目地址</h2><p><a href="https://git.oschina.net/tailyou/Hd_Smart_Template_D" target="_blank" rel="external">https://git.oschina.net/tailyou/Hd_Smart_Template_D</a></p>
<h2 id="二、依赖"><a href="#二、依赖" class="headerlink" title="二、依赖"></a>二、依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//tailyou</div><div class="line">compile &apos;com.hengda.zwf:HttpUtil:1.0.2&apos;</div><div class="line">compile &apos;com.hengda.zwf:AutoNoUtil:1.0.1&apos;</div><div class="line">compile &apos;com.hengda.zwf:CommonUtil:1.0.1&apos;</div><div class="line">compile &apos;com.hengda.zwf:CommonAdapter:1.0.2&apos;</div><div class="line">compile &apos;com.hengda.zwf:HdDialog:0.0.6&apos;</div><div class="line">//di</div><div class="line">compile &apos;com.google.dagger:dagger:2.9&apos;</div><div class="line">annotationProcessor &apos;com.google.dagger:dagger-compiler:2.9&apos;</div><div class="line">compile &apos;com.jakewharton:butterknife:8.5.1&apos;</div><div class="line">compile &apos;com.jakewharton:butterknife-compiler:8.5.1&apos;</div><div class="line">//other</div><div class="line">compile &apos;com.qozix:tileview:2.2.6&apos;</div><div class="line">compile &apos;com.orhanobut:logger:1.15&apos;</div><div class="line">compile &apos;me.yokeyword:fragmentation:0.10.1&apos;</div><div class="line">compile &apos;com.tencent.bugly:crashreport:2.4.0&apos;</div><div class="line">compile &apos;com.github.bumptech.glide:glide:3.7.0&apos;</div><div class="line">compile &apos;com.github.chrisbanes:PhotoView:1.3.1&apos;</div><div class="line">compile &apos;org.greenrobot:greendao:3.2.0&apos;</div><div class="line">compile &apos;org.greenrobot:greendao-generator:3.2.0&apos;</div><div class="line">compile &apos;com.android.support:multidex:1.0.1&apos;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> 项目模板 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【Android项目模板】-祝文飞]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90Android%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF%E3%80%91-%E7%A5%9D%E6%96%87%E9%A3%9E/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>参考GeekNews，基于RxJava2，Dagger2，Retrofit2搭建，采用MVP模式。封装了文件下载，多模收号，网络交互、数据库操作等功能；</p>
<h2 id="二、项目地址"><a href="#二、项目地址" class="headerlink" title="二、项目地址"></a>二、项目地址</h2><p><a href="https://git.oschina.net/tailyou/Hd_Smart_Template" target="_blank" rel="external">https://git.oschina.net/tailyou/Hd_Smart_Template</a></p>
<h2 id="二、依赖"><a href="#二、依赖" class="headerlink" title="二、依赖"></a>二、依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">//tailyou</div><div class="line">compile &apos;com.hengda.zwf:HttpUtil:1.0.2&apos;</div><div class="line">compile &apos;com.hengda.zwf:AutoNoUtil:1.0.2&apos;</div><div class="line">compile &apos;com.hengda.zwf:CommonUtil:1.0.1&apos;</div><div class="line">compile &apos;com.hengda.zwf:CommonAdapter:1.0.2&apos;</div><div class="line">compile &apos;com.hengda.zwf:HdDialog:0.0.6&apos;</div><div class="line">//di</div><div class="line">compile &apos;com.google.dagger:dagger:2.9&apos;</div><div class="line">annotationProcessor &apos;com.google.dagger:dagger-compiler:2.9&apos;</div><div class="line">compile &apos;com.jakewharton:butterknife:8.5.1&apos;</div><div class="line">compile &apos;com.jakewharton:butterknife-compiler:8.5.1&apos;</div><div class="line">//canary</div><div class="line">compile &apos;com.squareup.leakcanary:leakcanary-android:1.5&apos;</div><div class="line">compile &apos;com.squareup.leakcanary:leakcanary-android-no-op:1.5&apos;</div><div class="line">compile &apos;com.github.markzhai:blockcanary-android:1.4.1&apos;</div><div class="line">compile &apos;com.github.markzhai:blockcanary-no-op:1.4.1&apos;</div><div class="line">//other</div><div class="line">compile &apos;com.qozix:tileview:2.2.6&apos;</div><div class="line">compile &apos;com.orhanobut:logger:1.15&apos;</div><div class="line">compile &apos;me.yokeyword:fragmentation:0.10.1&apos;</div><div class="line">compile &apos;com.tencent.bugly:crashreport:2.4.0&apos;</div><div class="line">compile &apos;com.github.bumptech.glide:glide:3.7.0&apos;</div><div class="line">compile &apos;com.github.chrisbanes:PhotoView:1.3.1&apos;</div><div class="line">compile &apos;org.greenrobot:greendao:3.2.0&apos;</div><div class="line">compile &apos;org.greenrobot:greendao-generator:3.2.0&apos;</div><div class="line">compile &apos;com.github.hotchemi:permissionsdispatcher:2.3.1&apos;</div><div class="line">compile &apos;com.android.support:multidex:1.0.1&apos;</div><div class="line">annotationProcessor &apos;com.github.hotchemi:permissionsdispatcher-processor:2.3.1&apos;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> 项目模板 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【智慧欧七设备信息】-王志强]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E6%99%BA%E6%85%A7%E6%AC%A7%E4%B8%83%E8%AE%BE%E5%A4%87%E4%BF%A1%E6%81%AF%E3%80%91-%E7%8E%8B%E5%BF%97%E5%BC%BA/</url>
      <content type="html"><![CDATA[<h2 id="1、屏幕分辨率"><a href="#1、屏幕分辨率" class="headerlink" title="1、屏幕分辨率"></a>1、屏幕分辨率</h2><p>分辨率：240*320<br>状态栏高度：25<br>可用分辨率：240*295</p>
<h2 id="2、系统版本"><a href="#2、系统版本" class="headerlink" title="2、系统版本"></a>2、系统版本</h2><p>Android5.1.1</p>
<h2 id="3、物理按键对应的Android事件"><a href="#3、物理按键对应的Android事件" class="headerlink" title="3、物理按键对应的Android事件"></a>3、物理按键对应的Android事件</h2><p><img src="http://oksdjdocc.bkt.clouddn.com/17-3-17/75535658-file_1489734524518_57d1.png" alt=""></p>
<table>
<thead>
<tr>
<th>序号</th>
<th style="text-align:center">名称</th>
<th style="text-align:center">KeyCode</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td style="text-align:center">KEYCODE_DPAD_LEFT</td>
<td style="text-align:center">21</td>
</tr>
<tr>
<td>2</td>
<td style="text-align:center">KEYCODE_DPAD_RIGHT</td>
<td style="text-align:center">22</td>
</tr>
<tr>
<td>3</td>
<td style="text-align:center">KEYCODE_BACK</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td>4</td>
<td style="text-align:center">KEYCODE_MEDIA_PLAY_PAUSE</td>
<td style="text-align:center">85</td>
</tr>
<tr>
<td>5</td>
<td style="text-align:center">KEYCODE_VOLUME_DOWN</td>
<td style="text-align:center">25</td>
</tr>
<tr>
<td>6</td>
<td style="text-align:center">KEYCODE_VOLUME_UP</td>
<td style="text-align:center">24</td>
</tr>
<tr>
<td>7</td>
<td style="text-align:center">KEYCODE_ENTER</td>
<td style="text-align:center">66</td>
</tr>
</tbody>
</table>
]]></content>
      
        <categories>
            
            <category> 文档 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【恒达开发者账号】-王志强]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E6%81%92%E8%BE%BE%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E3%80%91-%E7%8E%8B%E5%BF%97%E5%BC%BA/</url>
      <content type="html"><![CDATA[<h2 id="1、腾讯bugly账号"><a href="#1、腾讯bugly账号" class="headerlink" title="1、腾讯bugly账号"></a>1、腾讯bugly账号</h2><p>账号：3364730368<br>密码：hengda888666<br>地址：<a href="https://bugly.qq.com/v2/index" target="_blank" rel="external">https://bugly.qq.com/v2/index</a></p>
<h2 id="2、fir内测平台"><a href="#2、fir内测平台" class="headerlink" title="2、fir内测平台"></a>2、fir内测平台</h2><p>账号：HD_Android@126.com<br>密码：hengda888666<br>地址：<a href="http://fir.im/" target="_blank" rel="external">http://fir.im/</a></p>
<h2 id="3、激光推送"><a href="#3、激光推送" class="headerlink" title="3、激光推送"></a>3、激光推送</h2><p>账号：HD_Android@126.com<br>密码：hengda888666<br>地址：<a href="https://www.jiguang.cn/app/list" target="_blank" rel="external">https://www.jiguang.cn/app/list</a></p>
<h2 id="4、百度账号"><a href="#4、百度账号" class="headerlink" title="4、百度账号"></a>4、百度账号</h2><p>账号：HD_Android<br>密码：hengda888666<br>地址：<a href="http://lbsyun.baidu.com/apiconsole/key" target="_blank" rel="external">http://lbsyun.baidu.com/apiconsole/key</a></p>
<h2 id="5、微信开放平台"><a href="#5、微信开放平台" class="headerlink" title="5、微信开放平台"></a>5、微信开放平台</h2><p>账号：HD_Android@126.com<br>密码：hengda888666<br>地址：<a href="https://open.weixin.qq.com/" target="_blank" rel="external">https://open.weixin.qq.com/</a></p>
<h2 id="6、高通AR"><a href="#6、高通AR" class="headerlink" title="6、高通AR"></a>6、高通AR</h2><p>账号：HD_Android@126.com<br>密码：Hengda888666<br>地址：<a href="https://developer.vuforia.com/targetmanager/project/deviceTargetListing" target="_blank" rel="external">https://developer.vuforia.com/targetmanager/project/deviceTargetListing</a></p>
<h2 id="7、腾讯QQ开放"><a href="#7、腾讯QQ开放" class="headerlink" title="7、腾讯QQ开放"></a>7、腾讯QQ开放</h2><p>账号：3364730368<br>密码：hengda888666<br>地址：<a href="http://open.qq.com/" target="_blank" rel="external">http://open.qq.com/</a></p>
<h2 id="8、Umeng-统计账号"><a href="#8、Umeng-统计账号" class="headerlink" title="8、Umeng 统计账号"></a>8、Umeng 统计账号</h2><p>账号： HD_Android@126.com<br>密码： hengda888666<br>地址：<a href="http://mobile.umeng.com/apps/setting" target="_blank" rel="external">http://mobile.umeng.com/apps/setting</a></p>
<h2 id="9、Jenter账号"><a href="#9、Jenter账号" class="headerlink" title="9、Jenter账号"></a>9、Jenter账号</h2><p>账号：HDAndroidTeam<br>密码：hengda888666<br>上传步骤：<a href="https://segmentfault.com/a/1190000006186992" target="_blank" rel="external">https://segmentfault.com/a/1190000006186992</a></p>
<h2 id="10、vpn账号"><a href="#10、vpn账号" class="headerlink" title="10、vpn账号"></a>10、vpn账号</h2><p>账号：hengda<br>密码：hengda888666</p>
]]></content>
      
        <categories>
            
            <category> 文档 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【文件下载FileLoader】-白世伟]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BDFileLoader%E3%80%91-%E7%99%BD%E4%B8%96%E4%BC%9F/</url>
      <content type="html"><![CDATA[<h1 id="HDFileLoader-文件下载框架"><a href="#HDFileLoader-文件下载框架" class="headerlink" title="HDFileLoader-文件下载框架"></a>HDFileLoader-文件下载框架</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>基于OKHttp3开发，自带服务器和本地资源文件的同步更新。具体使用方式详见Samples</p>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h4 id="V0-0-1"><a href="#V0-0-1" class="headerlink" title="V0.0.1"></a>V0.0.1</h4><ul>
<li>完成基础框架构建</li>
<li><p>增加资源同步更新</p>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="引入插件"><a href="#引入插件" class="headerlink" title="引入插件"></a>引入插件</h3><blockquote>
<p>Gradle:</p>
</blockquote>
<pre><code>暂无
</code></pre><blockquote>
<p>Maven:</p>
</blockquote>
<pre><code>暂无
</code></pre></li>
</ul>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="1-在Application-onCreate中初始化全局配置；"><a href="#1-在Application-onCreate中初始化全局配置；" class="headerlink" title="1.在Application.onCreate中初始化全局配置；"></a>1.在Application.onCreate中初始化全局配置；</h4><pre><code>OkHttpClient okHttpClient = new OkHttpClient.Builder()
         connectTimeout(10000L, TimeUnit.MILLISECONDS)
         readTimeout(10000L, TimeUnit.MILLISECONDS)
         addInterceptor(new LoggerInterceptor(&quot;TAG&quot;))
         build();
HDFileLoader.initClient(getApplicationContext(),okHttpClient);
</code></pre><p>注意:addInterceptor(new LoggerInterceptor(“TAG”))用于输出debug调试信息，如果不需要可以去掉。</p>
<h5 id="FileLoader有两种使用方式，一种是自带下载框，一种是基础版下载框架-需要自定义下载框；"><a href="#FileLoader有两种使用方式，一种是自带下载框，一种是基础版下载框架-需要自定义下载框；" class="headerlink" title="FileLoader有两种使用方式，一种是自带下载框，一种是基础版下载框架,需要自定义下载框；"></a>FileLoader有两种使用方式，一种是自带下载框，一种是基础版下载框架,需要自定义下载框；</h5><h4 id="2-使用自带下载框的方式"><a href="#2-使用自带下载框的方式" class="headerlink" title="2 使用自带下载框的方式"></a>2 使用自带下载框的方式</h4><p>(1)在Presenter，Fragment或Activity中实现DownloadCallBackListener接口，并实现以下三个回调方法</p>
<pre><code>@Override
public void completed(File file) {
    //下载完成后回调此方法，返回下载文件，可通过file.getAbsolutePath()获取绝对路径;
}

@Override
public void justPlay(String fileDir) {
    //此方法回调分两种方式
    //1，若果没有开启检查更新功能则判断本地文件是否存在，存在则回调；
    //2，如果开启了检查更新功能，如果下载文件不需要更新则回调；
}

@Override
public void error(Exception e) {
    //下载失败回调，例如没有网络，连接超时，找不到下载地址（404），无法访问存储路径等等。
}
</code></pre><p>（2）开始下载</p>
<pre><code>Downloader.Builder.create(MainActivity.this)
                        .url(url)//下载地址
                        .src(basicPath + &quot;0002/0002.aac&quot;)//源资源路径（例如播放路徑）
                        .des(basicPath)//下载保存路径
                        .name(&quot;0002.zip&quot;)//保存的文件名
                        .title(&quot;正在下载&quot;)//下载框标题
                        .ckeck(true)//是否自动检查更新，默认false
                        .unzip(true)//是否需要解压缩，默认true
                        .listener(MainActivity.this)//回调监听
                        .showCancel(true)//是否显示取消按钮，默认false
                        .build()
                        .start();//开始下载
</code></pre><h4 id="3-使用基础版下载框架"><a href="#3-使用基础版下载框架" class="headerlink" title="3.使用基础版下载框架"></a>3.使用基础版下载框架</h4><p>（1）创建一个RequestCall</p>
<pre><code>RequestCall call = HDFileLoader.get().url(url).build();
</code></pre><p>url为资源下载地址。<br>（2）创建FileCallBack回调，监听下载中的各种状态</p>
<pre><code>callBack=new FileCallBack(mSrc, mDes, mName, mCheck) {
    @Override
    public void connected(long total, int id) {

        //进行一些初始化的操作
    }

    @Override
    public void inProgress(float progress, long total, int id) {

        //下载进度回调，progress为已完成百分比，total为总长；
    }

    @Override
    public void completed(File file, int id) {

        //下载完成时回调，可以在这里解压缩及后续操作
    }

    @Override
    public void justPlay(String destFileDir) {
        //回调同带下载框方式一样
    }

    @Override
    public void onError(Call call, Exception e, int id) {

        //下载失败回调，例如没有网络，连接超时，找不到下载地址（404），无法访问存储路径等等。
    }
};
</code></pre><p>FileCallBack需要传入四个参数：</p>
<ol>
<li>源资源路径（例如播放路徑）；</li>
<li>下载路径。板锉</li>
<li>保存的文件名</li>
<li>是否启用检查更新</li>
</ol>
<h4 id="4-开始下载"><a href="#4-开始下载" class="headerlink" title="4.开始下载"></a>4.开始下载</h4><pre><code>call.execute(callBack);
</code></pre><h4 id="5-取消下载"><a href="#5-取消下载" class="headerlink" title="5.取消下载"></a>5.取消下载</h4><pre><code>call.cancel();
</code></pre>]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> Model </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【移动支付MobilePay】-常文达]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E7%A7%BB%E5%8A%A8%E6%94%AF%E4%BB%98MobilePay%E3%80%91-%E5%B8%B8%E6%96%87%E8%BE%BE/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>支付宝和微信支付</p>
<h2 id="二、引入方法"><a href="#二、引入方法" class="headerlink" title="二、引入方法"></a>二、引入方法</h2><p>dependencies {<br>      compile ‘com.wenda.pay:wd_pay:0.0.8’<br>}</p>
<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>支付宝支付<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">AliPayReq aliPayReq = new AliPayReq.Builder()</div><div class="line">        .with(MainActivity.this)</div><div class="line">        .setOrderInfo(OrderInfo) //OrderInfo为订单详情，服务器拼好的</div><div class="line">        .create()</div><div class="line"></div><div class="line"> PayAPI.getInstance().sendPayRequest(aliPayReq);//调起支付</div><div class="line"></div><div class="line">//关于支付宝支付的回调</div><div class="line">//aliPayReq.setOnAliPayListener(new OnAliPayListener);</div></pre></td></tr></table></figure></p>
<p>回调说明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">.setOnAliPayListener(new AliPayReq.OnAliPayListener() &#123;</div><div class="line">                         @Override</div><div class="line">                         public void onPaySuccess(String resultInfo) &#123;</div><div class="line">                             Toast.makeText(MainActivity.this,&quot;支付成功&quot;,Toast.LENGTH_LONG).show();</div><div class="line">                         &#125;</div><div class="line"></div><div class="line">                         @Override</div><div class="line">                         public void onPayFailure(String resultInfo) &#123;//包括用户主动取消支付，或者系统返回的错误</div><div class="line">                             Toast.makeText(MainActivity.this,&quot;支付失败&quot;,Toast.LENGTH_LONG).show();</div><div class="line">                         &#125;</div><div class="line"></div><div class="line">                         @Override</div><div class="line">                         public void onPayConfirmimg(String resultInfo) &#123;//代表支付结果因为支付渠道原因或者系统原因还在等待支付结果确认，最终交易是否成功以服务端异步通知为准（小概率状态）</div><div class="line">                             Toast.makeText(MainActivity.this,&quot;支付失败&quot;,Toast.LENGTH_LONG).show();</div><div class="line">                         &#125;</div><div class="line">                     &#125;);</div></pre></td></tr></table></figure></p>
<p>微信支付<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">WechatPayReq wechatPayReq = new WechatPayReq.Builder()</div><div class="line">                .with(MainActivity.this) //activity实例</div><div class="line">                .setAppId(&quot;AppId&quot;) //微信支付AppID</div><div class="line">                .setPartnerId(&quot;PartnerId&quot;)//微信支付商户号</div><div class="line">                .setPrepayId(&quot;PrepayId&quot;)//预支付码</div><div class="line">                .setNonceStr(&quot;NonceStr&quot;)</div><div class="line">                .setTimeStamp(&quot;TimeStamp&quot;)//时间戳</div><div class="line">                .setSign(&quot;Sign&quot;)//签名</div><div class="line">                .create();</div><div class="line">        PayAPI.getInstance().sendPayRequest(wechatPayReq);//调起支付</div><div class="line">          //关于微信支付的回调  要在支付前调用</div><div class="line">        wechatPayReq.init(getApplicationContext(), &quot;AppId&quot;);</div><div class="line">        WechatPayReq.getInstance().setWXPayResultCallBack();</div></pre></td></tr></table></figure></p>
<p>回调说明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">WechatPayReq.getInstance().setWXPayResultCallBack(new WechatPayReq.WXPayResultCallBack() &#123;</div><div class="line">      @Override</div><div class="line">      public void onSuccess() &#123;</div><div class="line">          Toast.makeText(MainActivity.this,&quot;支付成功&quot;,Toast.LENGTH_LONG).show();</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      @Override</div><div class="line">      public void onError(int error_code) &#123;//错误 可能的原因：签名错误、未注册APPID、项目设置APPID不正确、注册的APPID与设置的不匹配、其他异常等</div><div class="line">          Toast.makeText(MainActivity.this,&quot;支付失败&quot;,Toast.LENGTH_LONG).show();</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      @Override</div><div class="line">      public void onCancel() &#123;// 用户取消 无需处理。发生场景：用户不支付了，点击取消，返回APP。</div><div class="line">          Toast.makeText(MainActivity.this,&quot;支付失败&quot;,Toast.LENGTH_LONG).show();</div><div class="line">      &#125;</div><div class="line">  &#125;);</div></pre></td></tr></table></figure></p>
<p>微信支付需增加的权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;activity</div><div class="line">        android:name=&quot;com.wenda.pay.WXPayCallbackActivity&quot;</div><div class="line">        android:configChanges=&quot;orientation|keyboardHidden|navigation|screenSize&quot;</div><div class="line">        android:launchMode=&quot;singleTop&quot;</div><div class="line">        android:theme=&quot;@android:style/Theme.Translucent.NoTitleBar&quot; /&gt;</div><div class="line"></div><div class="line">    &lt;activity-alias</div><div class="line">        android:name=&quot;.wxapi.WXPayEntryActivity&quot;</div><div class="line">        android:exported=&quot;true&quot;</div><div class="line">        android:targetActivity=&quot;com.wenda.pay.WXPayCallbackActivity&quot; /&gt;</div></pre></td></tr></table></figure></p>
<p>混淆</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">#wechat pay</div><div class="line">-dontwarn com.tencent.**</div><div class="line">-keep class com.tencent.** &#123;*;&#125;</div><div class="line"></div><div class="line"></div><div class="line">#alipay</div><div class="line">-dontwarn com.alipay.**</div><div class="line">-keep class com.alipay.** &#123;*;&#125;</div><div class="line"></div><div class="line">-dontwarn  com.ta.utdid2.**</div><div class="line">-keep class com.ta.utdid2.** &#123;*;&#125;</div><div class="line"></div><div class="line">-dontwarn  com.ut.device.**</div><div class="line">-keep class com.ut.device.** &#123;*;&#125;</div><div class="line"></div><div class="line">-dontwarn  org.json.alipay.**</div><div class="line">-keep class corg.json.alipay.** &#123;*;&#125;</div></pre></td></tr></table></figure>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>###微信支付<br>微信支付必须是正式的签名包和正确的包名才能调起。</p>
<p>微信支付<br><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5</a></p>
<p>支付宝支付<br><a href="https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.1wPnBT&amp;treeId=204&amp;articleId=106079&amp;docType=1" target="_blank" rel="external">https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.1wPnBT&amp;treeId=204&amp;articleId=106079&amp;docType=1</a></p>
<p>demo里的数据是测试数据，都是已支付过的所以不能支付成功</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> Model </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【文件下载HttpUtil】-祝文飞]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BDHttpUtil%E3%80%91-%E7%A5%9D%E6%96%87%E9%A3%9E/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>基于Retrofit和RxJava2的网络请求和文件下载工具。</p>
<ul>
<li>智能判断服务器是否支持断点续传并适配相应下载方式；</li>
<li>智能判断同一地址对应的文件在服务端是否有改变并重新下载；</li>
<li>支持多线程下载，可设置下载线程数；</li>
<li>支持下载状态、下载进度监听；</li>
<li>支持在Service中下载文件，内置DownloadService；</li>
</ul>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>已在多个项目中使用，且已上传jCenter，最新版本1.0.0，直接在gradle中添加即可。<br>compile ‘com.hengda.zwf:HttpUtil:1.0.0’</p>
<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>具体用法参见demo，demo以检查版本更新和安装包下载为例。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">private void loadAndInstall(CheckResponse checkResponse) &#123;</div><div class="line">        String url = checkResponse.getVersionInfo().getVersionUrl();</div><div class="line">        String saveName = url.substring(url.lastIndexOf(&quot;/&quot;) + 1);</div><div class="line">        String savePath = HdAppConfig.getDefaultFileDir();</div><div class="line"></div><div class="line">        RxDownload.getInstance()</div><div class="line">                .download(url, saveName, savePath)</div><div class="line">                .subscribeOn(Schedulers.io())</div><div class="line">                .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                .doOnSubscribe(d -&gt; disposable = d)</div><div class="line">                .doOnNext(status -&gt; updateProgress(status))</div><div class="line">                .doOnError(throwable -&gt; Logger.e(&quot;下载失败：&quot; + throwable.getMessage()))</div><div class="line">                .doOnComplete(() -&gt; installApk(saveName, savePath))</div><div class="line">                .subscribe();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void installApk(String saveName, String savePath) &#123;</div><div class="line">        String apkPath = TextUtils.concat(savePath, saveName).toString();</div><div class="line">        AppUtil.installApk(CheckUpdateActivity.this, apkPath);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void updateProgress(DownloadStatus status) &#123;</div><div class="line">        txtProgress.setText(String.format(&quot;正在下载(%s/%s)&quot;,</div><div class="line">                DataManager.getFormatSize(status.getDownloadSize()),</div><div class="line">                DataManager.getFormatSize(status.getTotalSize())));</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> Model </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【提示弹框HdDialog】-祝文飞]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E6%8F%90%E7%A4%BA%E5%BC%B9%E6%A1%86HdDialog%E3%80%91-%E7%A5%9D%E6%96%87%E9%A3%9E/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>通用Dialog，适用于ProgressDialog，BuilderDialog，可以设置字体、进入退出动画，同时兼容手机和导览机。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>已在多个项目中使用，且已上传jCenter，最新版本0.0.5，直接在gradle中添加即可。<br>compile ‘com.hengda.zwf:HdDialog:0.0.5’</p>
<h2 id="三、效果"><a href="#三、效果" class="headerlink" title="三、效果"></a>三、效果</h2><h3 id="1、ProgressDialog补间动画"><a href="#1、ProgressDialog补间动画" class="headerlink" title="1、ProgressDialog补间动画"></a>1、ProgressDialog补间动画</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/79120594-file_1486346779883_dc73.png" alt=""></p>
<h3 id="2、ProgressDialog帧动画"><a href="#2、ProgressDialog帧动画" class="headerlink" title="2、ProgressDialog帧动画"></a>2、ProgressDialog帧动画</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/49606317-file_1486346779998_c220.png" alt=""></p>
<h3 id="3、BuilderDialog默认布局"><a href="#3、BuilderDialog默认布局" class="headerlink" title="3、BuilderDialog默认布局"></a>3、BuilderDialog默认布局</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/95840505-file_1486346780216_7f00.png" alt=""></p>
<h3 id="4、BuilderDialog自定义布局"><a href="#4、BuilderDialog自定义布局" class="headerlink" title="4、BuilderDialog自定义布局"></a>4、BuilderDialog自定义布局</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/76351990-file_1486346780326_3ff9.png" alt=""></p>
<h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>此处以BuilderDialog自定义布局为例，简单介绍说使用，具体用法参见demo。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 该方法通过提取文字参数和点击事件可以继续封装</div><div class="line"> *</div><div class="line"> * @author 祝文飞（Tailyou）</div><div class="line"> * @time 2017/2/6 9:37</div><div class="line"> */</div><div class="line">private void showCustomDlg() &#123;</div><div class="line">    HDialogBuilder hDialogBuilder = new HDialogBuilder(mContext);</div><div class="line"></div><div class="line">    View customView = View.inflate(mContext, R.layout.dialog_custom_view_all, null);</div><div class="line">    TextView tvTitle = HdTool.getView(customView, R.id.tvTitle);</div><div class="line">    TextView tvMsg = HdTool.getView(customView, R.id.tvMsg);</div><div class="line">    TextView btnYes = HdTool.getView(customView, R.id.btnYes);</div><div class="line">    TextView btnNo = HdTool.getView(customView, R.id.btnNo);</div><div class="line">    tvTitle.setText(&quot;注销&quot;);</div><div class="line">    tvMsg.setText(&quot;退出账号可能会使连续登录记录归零，确定退出？&quot;);</div><div class="line">    btnYes.setText(&quot;确定退出&quot;);</div><div class="line">    btnNo.setText(&quot;取消&quot;);</div><div class="line">    btnYes.setOnClickListener(v -&gt; hDialogBuilder.dismiss());</div><div class="line">    btnNo.setOnClickListener(v -&gt; hDialogBuilder.dismiss());</div><div class="line"></div><div class="line">    hDialogBuilder.setCustomView(customView)</div><div class="line">            .dlgColor(Color.TRANSPARENT)</div><div class="line">            .cancelable(false)</div><div class="line">            .show();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>封装后:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">private void showCustomDlg(String title, String msg, String txtYes, String txtNo,</div><div class="line">                           DialogClickListener dialogClickListener) &#123;</div><div class="line">    hDialogBuilder = new HDialogBuilder(mContext);</div><div class="line"></div><div class="line">    View customView = View.inflate(mContext, R.layout.dialog_custom_view_all, null);</div><div class="line">    TextView tvTitle = HdTool.getView(customView, R.id.tvTitle);</div><div class="line">    TextView tvMsg = HdTool.getView(customView, R.id.tvMsg);</div><div class="line">    TextView btnYes = HdTool.getView(customView, R.id.btnYes);</div><div class="line">    TextView btnNo = HdTool.getView(customView, R.id.btnNo);</div><div class="line">    tvTitle.setText(title);</div><div class="line">    tvMsg.setText(msg);</div><div class="line">    btnYes.setText(txtYes);</div><div class="line">    btnNo.setText(txtNo);</div><div class="line">    btnYes.setOnClickListener(v -&gt; dialogClickListener.p());</div><div class="line">    btnNo.setOnClickListener(v -&gt; dialogClickListener.n());</div><div class="line"></div><div class="line">    hDialogBuilder.setCustomView(customView)</div><div class="line">                    .dlgColor(Color.TRANSPARENT)</div><div class="line">                    .cancelable(false)</div><div class="line">                    .show();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>封装好之后，可以写到工具类中供直接调用.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * 作者：Tailyou （祝文飞）</div><div class="line"> * 时间：2016/5/26 19:03</div><div class="line"> * 邮箱：tailyou@163.com</div><div class="line"> * 描述：Dialog工具类</div><div class="line"> */</div><div class="line">public class DialogCenter &#123;</div><div class="line"></div><div class="line">    private static HDialogBuilder hDialogBuilder;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 封装好的方法可以写到DialogCenter工具类中，供直接调用</div><div class="line">     *</div><div class="line">     * @author 祝文飞（Tailyou）</div><div class="line">     * @time 2017/2/6 9:39</div><div class="line">     */</div><div class="line">    public static void showCustomDlg(Context mContext, String title, String msg, String txtYes, String txtNo,</div><div class="line">                               DialogClickListener dialogClickListener) &#123;</div><div class="line">        hideDialog();</div><div class="line">        hDialogBuilder = new HDialogBuilder(mContext);</div><div class="line"></div><div class="line">        View customView = View.inflate(mContext, R.layout.dialog_custom_view_all, null);</div><div class="line">        TextView tvTitle = HdTool.getView(customView, R.id.tvTitle);</div><div class="line">        TextView tvMsg = HdTool.getView(customView, R.id.tvMsg);</div><div class="line">        TextView btnYes = HdTool.getView(customView, R.id.btnYes);</div><div class="line">        TextView btnNo = HdTool.getView(customView, R.id.btnNo);</div><div class="line">        tvTitle.setText(title);</div><div class="line">        tvMsg.setText(msg);</div><div class="line">        btnYes.setText(txtYes);</div><div class="line">        btnNo.setText(txtNo);</div><div class="line">        btnYes.setOnClickListener(v -&gt; dialogClickListener.p());</div><div class="line">        btnNo.setOnClickListener(v -&gt; dialogClickListener.n());</div><div class="line"></div><div class="line">        hDialogBuilder.setCustomView(customView)</div><div class="line">                        .dlgColor(Color.TRANSPARENT)</div><div class="line">                        .cancelable(false)</div><div class="line">                        .show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 隐藏Dialog</div><div class="line">     */</div><div class="line">    public static void hideDialog() &#123;</div><div class="line">        if (hDialogBuilder != null) &#123;</div><div class="line">            hDialogBuilder.dismiss();</div><div class="line">            hDialogBuilder = null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> Model </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【数据适配器CommonAdapter】-祝文飞]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E6%95%B0%E6%8D%AE%E9%80%82%E9%85%8D%E5%99%A8CommonAdapter%E3%80%91-%E7%A5%9D%E6%96%87%E9%A3%9E/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>通用Adapter，适用于单布局ListView、多布局ListView、单布局RecyclerView，多布局RecyclerView，带章节标题RecyclerView，GridView与ViewPage结合使用等情况。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>已在多个项目中使用，且已上传jCenter，最新版本0.0.6，直接在gradle中添加即可。<br>compile ‘com.hengda.zwf:CommonAdapter:0.0.6’</p>
<h2 id="三、效果"><a href="#三、效果" class="headerlink" title="三、效果"></a>三、效果</h2><h3 id="1、单布局ListView"><a href="#1、单布局ListView" class="headerlink" title="1、单布局ListView"></a>1、单布局ListView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/89062263-file_1486106094623_13cca.png" alt=""></p>
<h3 id="2、多布局ListView"><a href="#2、多布局ListView" class="headerlink" title="2、多布局ListView"></a>2、多布局ListView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/95414587-file_1486106094743_467a.png" alt=""></p>
<h3 id="3、单布局RecyclerView"><a href="#3、单布局RecyclerView" class="headerlink" title="3、单布局RecyclerView"></a>3、单布局RecyclerView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/7801613-file_1486106094857_1789f.png" alt=""></p>
<h3 id="4、多布局RecyclerView"><a href="#4、多布局RecyclerView" class="headerlink" title="4、多布局RecyclerView"></a>4、多布局RecyclerView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/51561209-file_1486106094971_210f.png" alt=""></p>
<h3 id="5、章节标题RecyclerView"><a href="#5、章节标题RecyclerView" class="headerlink" title="5、章节标题RecyclerView"></a>5、章节标题RecyclerView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/79560240-file_1486106095086_dd99.png" alt=""></p>
<h3 id="6、GridView结合ViewPage"><a href="#6、GridView结合ViewPage" class="headerlink" title="6、GridView结合ViewPage"></a>6、GridView结合ViewPage</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/4686495-file_1486106094388_21d9.png" alt=""></p>
<h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>具体用法见demo。</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> Model </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【多模收号AutoNoUtil】-祝文飞]]></title>
      <url>http://yoursite.com/2017/03/17/%E3%80%90%E5%A4%9A%E6%A8%A1%E6%94%B6%E5%8F%B7AutoNoUtil%E3%80%91-%E7%A5%9D%E6%96%87%E9%A3%9E/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>多模收号模块，包含rfid，ble，wifi三种收号方式。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>最新版本1.0.2，compile ‘com.hengda.zwf:AutoNoUtil:1.0.2’</p>
<h2 id="三、gradle依赖"><a href="#三、gradle依赖" class="headerlink" title="三、gradle依赖"></a>三、gradle依赖</h2><p>无</p>
<h2 id="四、思路"><a href="#四、思路" class="headerlink" title="四、思路"></a>四、思路</h2><h3 id="1、BLE收号思路"><a href="#1、BLE收号思路" class="headerlink" title="1、BLE收号思路"></a>1、BLE收号思路</h3><ul>
<li>1、启动蓝牙收号后，将后台扫描得到的 BluetoothDevice device, int rssi, byte[] scanRecord 解析成Beacon；</li>
<li>2、以回调接口的形式，在收号服务中处理解析得到的Beacon，根据一定条件进行过滤，将符合条件的Beacon加入List；</li>
<li>3、每隔一定时间间隔从List中取AutoNo，取的原则是：按平均rssi排序，较大为优</li>
</ul>
<h3 id="2、WiFi收号思路"><a href="#2、WiFi收号思路" class="headerlink" title="2、WiFi收号思路"></a>2、WiFi收号思路</h3><ul>
<li>1、启动WiFi收号后，通过RxBus发送后台扫描得到的 ScanResult；</li>
<li>2、在收号服务中接收 ScanResult，根据一定条件过滤，将符合条件的 ScanResult 加入List；</li>
<li>3、每个一定时间间隔从List中取AutoNo，取的原则是：按平均 level 排序，较大为优</li>
</ul>
<h3 id="3、Rfid收号思路"><a href="#3、Rfid收号思路" class="headerlink" title="3、Rfid收号思路"></a>3、Rfid收号思路</h3><ul>
<li>1、Rfid收号只有导览机使用，接收设备底层上传的数据并解析得到多模号；</li>
<li>2、SerialPort及所在的包名不能修改。</li>
</ul>
<h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>具体使用见demo。</p>
]]></content>
      
        <categories>
            
            <category> Android </category>
            
            <category> Model </category>
            
        </categories>
        
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://yoursite.com/about/index.html</url>
      <content type="html"><![CDATA[<p>大家好，我们是恒达Android团队。欢迎来到我们的技术博客。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>http://yoursite.com/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
