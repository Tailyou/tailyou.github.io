<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Glide4.0+学习笔记]]></title>
      <url>http://yoursite.com/2017/12/12/Glide4.0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>Glide是一个快速高效的Android图片加载库，注重于平滑的滚动。Glide提供了易用的API，高性能、可扩展的图片解码管道（decode pipeline），以及自动的资源池技术。</p>
<p>当前版本：v4.4</p>
<p>项目地址：<a href="https://github.com/bumptech/glide" target="_blank" rel="external">https://github.com/bumptech/glide</a></p>
<p>中文文档：<a href="https://muyangmin.github.io/glide-docs-cn/" target="_blank" rel="external">https://muyangmin.github.io/glide-docs-cn/</a></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Glide4.0 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Kotlin学习笔记-Standart.kt]]></title>
      <url>http://yoursite.com/2017/12/12/Kotlin%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Standard.kt/</url>
      <content type="html"><![CDATA[<h4 id="1-apply"><a href="#1-apply" class="headerlink" title="1. apply"></a>1. apply</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the specified function [block] with `this` value as its receiver and returns `this` value.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> T.<span class="title">apply</span><span class="params">(block: <span class="type">T</span>.()</span></span> -&gt; <span class="built_in">Unit</span>): T &#123; block(); <span class="keyword">return</span> <span class="keyword">this</span> &#125;</div></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">AddEditTaskFragment.newInstance().apply &#123;</div><div class="line">             arguments = Bundle().apply &#123;</div><div class="line">                 putString(AddEditTaskFragment.ARGUMENT_EDIT_TASK_ID,</div><div class="line">                         intent.getStringExtra(AddEditTaskFragment.ARGUMENT_EDIT_TASK_ID))</div><div class="line">             &#125;</div><div class="line">         &#125;</div></pre></td></tr></table></figure>
<h4 id="2-with"><a href="#2-with" class="headerlink" title="2. with"></a>2. with</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the specified function [block] with the given [receiver] as its receiver and returns its result.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T, R&gt;</span> <span class="title">with</span><span class="params">(receiver: <span class="type">T</span>, block: <span class="type">T</span>.()</span></span> -&gt; R): R = receiver.block()</div></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">with(items) &#123;</div><div class="line">                clear()</div><div class="line">                addAll(tasksToShow)</div><div class="line">                empty.<span class="keyword">set</span>(isEmpty())</div><div class="line">            &#125;</div></pre></td></tr></table></figure>
<h4 id="3-let"><a href="#3-let" class="headerlink" title="3. let"></a>3. let</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the specified function [block] with `this` value as its argument and returns its result.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T, R&gt;</span> T.<span class="title">let</span><span class="params">(block: (<span class="type">T</span>)</span></span> -&gt; R): R = block(<span class="keyword">this</span>)</div></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">taskId?.let &#123;</div><div class="line">          tasksRepository.getTask(it, <span class="keyword">this</span>)</div><div class="line">      &#125;</div></pre></td></tr></table></figure>
<h4 id="4-also-（V1-1）"><a href="#4-also-（V1-1）" class="headerlink" title="4. also （V1.1）"></a>4. also （V1.1）</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the specified function [block] with `this` value as its argument and returns `this` value.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="meta">@SinceKotlin(<span class="meta-string">"1.1"</span>)</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> T.<span class="title">also</span><span class="params">(block: (<span class="type">T</span>)</span></span> -&gt; <span class="built_in">Unit</span>): T &#123; block(<span class="keyword">this</span>); <span class="keyword">return</span> <span class="keyword">this</span> &#125;</div></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">supportFragmentManager.findFragmentById(R.id.contentFrame) ?:</div><div class="line">                 StatisticsFragment.newInstance().also &#123;</div><div class="line">                     replaceFragmentInActivity(it, R.id.contentFrame)</div><div class="line">                 &#125;</div></pre></td></tr></table></figure>
<h4 id="5-run"><a href="#5-run" class="headerlink" title="5. run"></a>5. run</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the specified function [block] and returns its result.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;R&gt;</span> <span class="title">run</span><span class="params">(block: ()</span></span> -&gt; R): R = block()</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Calls the specified function [block] with `this` value as its receiver and returns its result.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T, R&gt;</span> T.<span class="title">run</span><span class="params">(block: <span class="type">T</span>.()</span></span> -&gt; R): R = block()</div></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">activity.findViewById&lt;FloatingActionButton&gt;(R.id.fab_add_task).run &#123;</div><div class="line">          setImageResource(R.drawable.ic_add)</div><div class="line">          setOnClickListener &#123;</div><div class="line">              viewDataBinding.viewmodel?.addNewTask()</div><div class="line">          &#125;</div><div class="line">      &#125;</div></pre></td></tr></table></figure>
<h4 id="6-repeat"><a href="#6-repeat" class="headerlink" title="6. repeat"></a>6. repeat</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Executes the given function [action] specified number of [times].</div><div class="line"> *</div><div class="line"> * A zero-based index of current iteration is passed as a parameter to [action].</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">repeat</span><span class="params">(times: <span class="type">Int</span>, action: (<span class="type">Int</span>)</span></span> -&gt; <span class="built_in">Unit</span>) &#123;</div><div class="line">    <span class="keyword">for</span> (index <span class="keyword">in</span> <span class="number">0.</span>.times - <span class="number">1</span>) &#123;</div><div class="line">        action(index)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="7-takeIf-（V1-1）"><a href="#7-takeIf-（V1-1）" class="headerlink" title="7. takeIf （V1.1）"></a>7. takeIf （V1.1）</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Executes the given function [action] specified number of [times].</div><div class="line"> *</div><div class="line"> * A zero-based index of current iteration is passed as a parameter to [action].</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="title">repeat</span><span class="params">(times: <span class="type">Int</span>, action: (<span class="type">Int</span>)</span></span> -&gt; <span class="built_in">Unit</span>) &#123;</div><div class="line">    <span class="keyword">for</span> (index <span class="keyword">in</span> <span class="number">0.</span>.times - <span class="number">1</span>) &#123;</div><div class="line">        action(index)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="8-takeUnless-（V1-1）"><a href="#8-takeUnless-（V1-1）" class="headerlink" title="8. takeUnless （V1.1）"></a>8. takeUnless （V1.1）</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Returns `this` value if it _does not_ satisfy the given [predicate] or `null`, if it does.</div><div class="line"> */</div><div class="line"><span class="meta">@kotlin</span>.<span class="keyword">internal</span>.InlineOnly</div><div class="line"><span class="meta">@SinceKotlin(<span class="meta-string">"1.1"</span>)</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">inline</span> <span class="function"><span class="keyword">fun</span> <span class="type">&lt;T&gt;</span> T.<span class="title">takeUnless</span><span class="params">(predicate: (<span class="type">T</span>)</span></span> -&gt; <span class="built_in">Boolean</span>): T? = <span class="keyword">if</span> (!predicate(<span class="keyword">this</span>)) <span class="keyword">this</span> <span class="keyword">else</span> <span class="literal">null</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> kotlin </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【Kotlin配置信息管理工具-OkPreference】]]></title>
      <url>http://yoursite.com/2017/07/19/Kotlin%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7-OkPreference/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>在开发过程中通常需要保存用户或App的一些配置信息，如token，CurrentLanguage（当前语种），DeviceNo（设备号）等，OkPreference是一个处理配置信息工具库，<br>可以方便的管理需要配置的字段，字段支持Long，Int，Boolean，String，Float五种基本类型，也可以是任意类。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>已上传JitPack，最新版本1.2，直接在gradle中添加依赖即可。<br>compile ‘com.github.Tailyou:OkPreference:1.2’</p>
<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><h4 id="3-1-app-build-gradle中添加依赖"><a href="#3-1-app-build-gradle中添加依赖" class="headerlink" title="3.1 app build.gradle中添加依赖"></a>3.1 app build.gradle中添加依赖</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile <span class="string">'com.github.Tailyou:OkPreference:1.2'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-2-root-build-gradle中添加"><a href="#3-2-root-build-gradle中添加" class="headerlink" title="3.2 root build.gradle中添加"></a>3.2 root build.gradle中添加</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        ...</div><div class="line">        maven &#123; url &apos;https://jitpack.io&apos; &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-3-继承PreferenceHolderApplication或在自定义的Application中添加如下代码："><a href="#3-3-继承PreferenceHolderApplication或在自定义的Application中添加如下代码：" class="headerlink" title="3.3 继承PreferenceHolderApplication或在自定义的Application中添加如下代码："></a>3.3 继承PreferenceHolderApplication或在自定义的Application中添加如下代码：</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</div><div class="line">    <span class="keyword">super</span>.onCreate()</div><div class="line">    ...</div><div class="line">    PreferenceHolder.setContext(applicationContext)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-4-继承PreferenceHolder，添加需要配置的字段"><a href="#3-4-继承PreferenceHolder，添加需要配置的字段" class="headerlink" title="3.4 继承PreferenceHolder，添加需要配置的字段"></a>3.4 继承PreferenceHolder，添加需要配置的字段</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">const <span class="keyword">val</span> CHINESE: <span class="built_in">Int</span> = <span class="number">1</span></div><div class="line">const <span class="keyword">val</span> ENGLISH: <span class="built_in">Int</span> = <span class="number">2</span></div><div class="line">const <span class="keyword">val</span> JAPANESE: <span class="built_in">Int</span> = <span class="number">3</span></div><div class="line">const <span class="keyword">val</span> DEFAULT_DEVICE_NO: String = <span class="string">"AG10000000000"</span></div><div class="line"></div><div class="line"><span class="keyword">object</span> AppConfig : PreferenceHolder() &#123;</div><div class="line">    <span class="keyword">var</span> deviceNo: String <span class="keyword">by</span> bindToPreferenceField(DEFAULT_DEVICE_NO, <span class="string">"DeviceNo"</span>)</div><div class="line">    <span class="keyword">var</span> language: <span class="built_in">Int</span> <span class="keyword">by</span> bindToPreferenceField(CHINESE, <span class="string">"Language"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">object</span> UserConfig : PreferenceHolder() &#123;</div><div class="line">    <span class="keyword">var</span> user: User? <span class="keyword">by</span> bindToPreferenceFieldNullable(<span class="string">"User"</span>)</div><div class="line">    <span class="keyword">var</span> token: String? <span class="keyword">by</span> bindToPreferenceFieldNullable(<span class="string">"Token"</span>)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">data</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>(</div><div class="line">        <span class="keyword">var</span> name: String,</div><div class="line">        <span class="keyword">var</span> age: <span class="built_in">Int</span></div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="3-5-取值、赋值"><a href="#3-5-取值、赋值" class="headerlink" title="3.5 取值、赋值"></a>3.5 取值、赋值</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">tvDeviceNo.text = AppConfig.deviceNo</div><div class="line">btnChangeDeviceNo.setOnClickListener &#123;</div><div class="line">    AppConfig.deviceNo = <span class="string">"AG100000000"</span> + String.format(<span class="string">"%02d"</span>, Random().nextInt(<span class="number">100</span>))</div><div class="line">    tvDeviceNo.text = AppConfig.deviceNo</div><div class="line">&#125;</div><div class="line">btnSaveEntity.setOnClickListener &#123;</div><div class="line">    UserConfig.user = User(<span class="string">"tailyou"</span>, <span class="number">20</span>)</div><div class="line">    toast((UserConfig.user <span class="keyword">as</span> User).name)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>具体用法参见Demo，项目地址：<a href="https://github.com/Tailyou/OkPreference" target="_blank" rel="external">https://github.com/Tailyou/OkPreference</a></p>
]]></content>
      
        <categories>
            
            <category> 模块 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Kotlin </tag>
            
            <tag> Preference </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【第三方登录分享框架-ShareLogin】]]></title>
      <url>http://yoursite.com/2017/06/08/%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E5%88%86%E4%BA%AB%E6%A1%86%E6%9E%B6-ShareLogin/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>ShareLoginSdk是一个封装了QQ、微信、微博登录和分享功能的库，分享支持纯文字、<br>纯图片、网页（图文）三种格式，可分享到微博、QQ好友、QQ空间、微信好友、朋友圈、微信收藏。</p>
<ol>
<li>分享、登录时会自动检查是否安装并给出提示；</li>
<li>由于QQ分享不支持分享纯文本给好友，这一部分采用直接调用QQ的方式实现。</li>
</ol>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>已上传jCenter，最新版本0.0.2，直接在gradle中添加依赖即可。<br>compile ‘com.hengda.zwf:ShareLogin:0.0.2’</p>
<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><p>封装此库的目的是为了在开发第三方登录和分享功能时，尽可能的少一些拷贝和配置。详细使用参见Demo。  </p>
<p>项目地址：<a href="https://git.oschina.net/tailyou/HD_Frame_ShareLogin。" target="_blank" rel="external">https://git.oschina.net/tailyou/HD_Frame_ShareLogin。</a></p>
<h3 id="3-1-配置"><a href="#3-1-配置" class="headerlink" title="3.1 配置"></a>3.1 配置</h3><p>配置非常简单，不需要拷贝jar文件，不需要修改AndroidManifest.xml.  </p>
<p>添加对ShareLogin的依赖即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile &apos;com.hengda.zwf:ShareLogin:0.0.1&apos;</div></pre></td></tr></table></figure>
<p>如果用到QQ平台，需要在app的defaultConfig中配置tencentAuthId，如下所示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">defaultConfig &#123;</div><div class="line">    applicationId &quot;com.umeng.soexample&quot;</div><div class="line">    minSdkVersion 15</div><div class="line">    targetSdkVersion 22</div><div class="line">    versionCode 1</div><div class="line">    versionName &quot;1.0&quot;</div><div class="line">    testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;</div><div class="line">    manifestPlaceholders = [tencentAuthId: &quot;tencent100424468&quot;]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="3-2-使用"><a href="#3-2-使用" class="headerlink" title="3.2 使用"></a>3.2 使用</h3><h4 id="3-2-1-初始化ShareLoginClient，配置相应平台的AppId，AppSecret等。"><a href="#3-2-1-初始化ShareLoginClient，配置相应平台的AppId，AppSecret等。" class="headerlink" title="3.2.1 初始化ShareLoginClient，配置相应平台的AppId，AppSecret等。"></a>3.2.1 初始化<code>ShareLoginClient</code>，配置相应平台的AppId，AppSecret等。</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 初始化 ShareLoginClient</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line"> * <span class="doctag">@time</span> 2017/6/6 13:40</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initShareLoginClient</span><span class="params">()</span> </span>&#123;</div><div class="line">    ShareLoginConfig slc = <span class="keyword">new</span> ShareLoginConfig.Builder()</div><div class="line">            .debug(<span class="keyword">true</span>)</div><div class="line">            .appName(getString(R.string.app_name))</div><div class="line">            .qq(Constants.QQ_APP_ID, Constants.QQ_SCOPE)</div><div class="line">            .weiXin(Constants.WECHAT_APP_ID, Constants.WECHAT_APP_SECRET)</div><div class="line">            .weiBo(Constants.SINA_APP_KEY, Constants.SINA_REDIRECT_URL, Constants.SINA_SCOPE)</div><div class="line">            .build();</div><div class="line">    ShareLoginClient.init(slc);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="3-2-2-登录，传入登录平台和回调"><a href="#3-2-2-登录，传入登录平台和回调" class="headerlink" title="3.2.2 登录，传入登录平台和回调"></a>3.2.2 登录，传入登录平台和回调</h4><p>微博<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ShareLoginClient.login(mActivity, LoginPlatform.WEIBO, <span class="keyword">new</span> LoginListener(mActivity, LoginPlatform.WEIBO));</div></pre></td></tr></table></figure></p>
<p>微信<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ShareLoginClient.login(mActivity, LoginPlatform.WEIXIN, <span class="keyword">new</span> LoginListener(mActivity, LoginPlatform.WEIXIN));</div></pre></td></tr></table></figure></p>
<p>QQ<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ShareLoginClient.login(mActivity, LoginPlatform.QQ, <span class="keyword">new</span> LoginListener(mActivity, LoginPlatform.QQ));</div></pre></td></tr></table></figure></p>
<h4 id="3-2-3-分享，根据分享类型创建分享内容。"><a href="#3-2-3-分享，根据分享类型创建分享内容。" class="headerlink" title="3.2.3 分享，根据分享类型创建分享内容。"></a>3.2.3 分享，根据分享类型创建分享内容。</h4><p>1）纯文本<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mShareContent = <span class="keyword">new</span> ShareContentText(<span class="string">"我感觉这是个神奇的问题，昨天项目还一切OK"</span>);</div></pre></td></tr></table></figure></p>
<p>2）纯图片<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mShareContent = <span class="keyword">new</span> ShareContentPicture(mLargeBmpPath);</div></pre></td></tr></table></figure></p>
<p>3）图文（网页）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mShareContent = <span class="keyword">new</span> ShareContentPage(<span class="string">"这是标题，好像不够长"</span>,<span class="string">"我感觉这是个神奇的问题，昨天项目还一切OK"</span>,</div><div class="line">        <span class="string">"https://segmentfault.com/q/1010000009688458"</span>, mLargeBmpPath, mThumbBmpBytes);</div></pre></td></tr></table></figure></p>
<h4 id="3-2-4-分享，传入分享平台、分享内容、回调"><a href="#3-2-4-分享，传入分享平台、分享内容、回调" class="headerlink" title="3.2.4 分享，传入分享平台、分享内容、回调"></a>3.2.4 分享，传入分享平台、分享内容、回调</h4><p>以微博为例，其他分享平台类似。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ShareLoginClient.share(mActivity, SharePlatform.WEIBO_TIME_LINE, mShareContent, <span class="keyword">new</span> ShareListener(mActivity));</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 模块 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 第三方 </tag>
            
            <tag> 登录 </tag>
            
            <tag> 分享 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【文件下载&网络请求库-OkRetrofit】]]></title>
      <url>http://yoursite.com/2017/04/16/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD&amp;%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E5%BA%93-OkRetrofit/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>Retrofit+RxJava是当前最流行的Android网络交互解决方案。OkRetrofit是一个基于Retrofit2+RxJava2封装的文件下载和网络请求库，<br>其中文件下载部分参考了RxDownload，去掉了RxPermission相关的代码，网络请求部分做了适当的抽象和封装，方便使用的同时也不影响相关部分的定制。</p>
<h3 id="1-1-文件下载"><a href="#1-1-文件下载" class="headerlink" title="1.1 文件下载"></a>1.1 文件下载</h3><ol>
<li>智能判断服务器是否支持断点续传并适配相应下载方式；</li>
<li>智能判断同一地址对应的文件在服务端是否有改变并重新下载；</li>
<li>支持多线程下载，可设置下载线程数；</li>
<li>支持下载状态、下载进度监听；</li>
<li>支持在Service中下载文件，内置DownloadService；</li>
</ol>
<p><br></p>
<h3 id="1-2-网络请求"><a href="#1-2-网络请求" class="headerlink" title="1.2 网络请求"></a>1.2 网络请求</h3><ol>
<li>内置<code>BaseRetrofit</code>,提供了抽象方法<code>initOkHttp</code>供上层实现，可在此方法中配置日志、缓存、超时等；</li>
<li>内置服务器统一返回<code>HttpResponse</code>和请求异常<code>HttpException</code>；</li>
<li>内置统一线程处理和统一返回结果转换方法；</li>
</ol>
<p><br></p>
<h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><h3 id="2-1-Gradle"><a href="#2-1-Gradle" class="headerlink" title="2.1 Gradle"></a>2.1 Gradle</h3><p>OkRetrofit已上传到jcenter，在gradle中直接引用即可。</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile <span class="string">'com.hengda.zwf:OkRetrofit:0.0.1'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-2-文件下载"><a href="#2-2-文件下载" class="headerlink" title="2.2 文件下载"></a>2.2 文件下载</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">RxDownload.getInstance().context(MainActivity.<span class="keyword">this</span>)</div><div class="line">              .maxThread(<span class="number">4</span>).maxRetryCount(<span class="number">3</span>)</div><div class="line">              .download(url, saveName, savePath)</div><div class="line">              .subscribeOn(Schedulers.io())</div><div class="line">              .observeOn(AndroidSchedulers.mainThread())</div><div class="line">              .doOnSubscribe(disposable -&gt; &#123;</div><div class="line">                  compositeDisposable.add(disposable);</div><div class="line">                  tvDownloadStatus.setText(<span class="string">"下载地址："</span> + url + <span class="string">"\n"</span>);</div><div class="line">                  SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日HH时mm分ss秒"</span>);</div><div class="line">                  tvDownloadStatus.setText(tvDownloadStatus.getText() + <span class="string">"\n开始下载："</span> + sdf.format(<span class="keyword">new</span> Date()));</div><div class="line">              &#125;)</div><div class="line">              .doOnNext(downloadStatus -&gt; &#123;</div><div class="line">                  <span class="comment">//此处更新下载进度</span></div><div class="line">                  String formatStatusString = downloadStatus.getFormatStatusString();</div><div class="line">                  tvDownloadPrg.setText(<span class="string">"下载进度："</span> + formatStatusString);</div><div class="line">              &#125;)</div><div class="line">              .doOnError(throwable -&gt; &#123;</div><div class="line">                  <span class="comment">//此处处理下载异常</span></div><div class="line">                  tvDownloadStatus.setText(<span class="string">"下载失败:"</span> + throwable.getMessage());</div><div class="line">              &#125;)</div><div class="line">              .doOnComplete(() -&gt; &#123;</div><div class="line">                  <span class="comment">//下载完成，解压或安装</span></div><div class="line">                  SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日HH时mm分ss秒"</span>);</div><div class="line">                  tvDownloadPrg.setText(tvDownloadPrg.getText() + <span class="string">"\n下载完成："</span> + sdf.format(<span class="keyword">new</span> Date()));</div><div class="line">                  File file = <span class="keyword">new</span> File(savePath, saveName);</div><div class="line">                  file.delete();</div><div class="line">              &#125;)</div><div class="line">              .subscribe();</div></pre></td></tr></table></figure>
<h3 id="2-3-网络请求"><a href="#2-3-网络请求" class="headerlink" title="2.3 网络请求"></a>2.3 网络请求</h3><p>2.3.1 新建声明网络请求方法的接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HttpApis</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@GET</span>(<span class="string">"index.php?g=mapi&amp;m=appdatas&amp;a=datas"</span>)</div><div class="line">    Observable&lt;HttpResponse&lt;DataBean&gt;&gt; loadDatas();</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.3.2 继承BaseRetrofit，实现initOkHttp方法，在此方法中可配置超时、日志、缓存等。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RetrofitHelper</span> <span class="keyword">extends</span> <span class="title">BaseRetrofit</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HttpApis httpApis = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> RetrofitHelper instance;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 单例模式</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line">     * <span class="doctag">@time</span> 2016/11/12 11:31</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">RetrofitHelper</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">        httpApis = getApiService(setupBaseHttpUrl(), HttpApis.class);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 组装网络请求基地址</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line">     * <span class="doctag">@time</span> 2016/11/12 11:38</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">setupBaseHttpUrl</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"http://"</span> + HdAppConfig.getDefaultIpPort() + <span class="string">"/hnbwy/"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取实例-单例</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line">     * <span class="doctag">@time</span> 2016/11/12 11:32</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RetrofitHelper <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">synchronized</span> (RetrofitHelper.class) &#123;</div><div class="line">                <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</div><div class="line">                    instance = <span class="keyword">new</span> RetrofitHelper();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> instance;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 在此配置超时，缓存，日志等</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line">     * <span class="doctag">@time</span> 2017/5/10 11:10</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> OkHttpClient <span class="title">initOkHttp</span><span class="params">()</span> </span>&#123;</div><div class="line">        OkHttpClient.Builder builder = <span class="keyword">new</span> OkHttpClient.Builder();</div><div class="line">        builder.connectTimeout(<span class="number">10</span>, TimeUnit.SECONDS);</div><div class="line">        builder.writeTimeout(<span class="number">20</span>, TimeUnit.SECONDS);</div><div class="line">        builder.readTimeout(<span class="number">20</span>, TimeUnit.SECONDS);</div><div class="line">        builder.retryOnConnectionFailure(<span class="keyword">true</span>);</div><div class="line">        <span class="keyword">return</span> builder.build();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 获取数据</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line">     * <span class="doctag">@time</span> 2017/1/3 11:57</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Observable&lt;DataBean&gt; <span class="title">loadDatas</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> httpApis.loadDatas().compose(rxSchedulerHelper()).compose(handleResult());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.3.3 使用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">RetrofitHelper.getInstance()</div><div class="line">        .loadDatas()</div><div class="line">        .doOnSubscribe(disposable -&gt; compositeDisposable.add(disposable))</div><div class="line">        .doOnNext(dataBean -&gt; Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> Gson().toJson(dataBean), Toast.LENGTH_SHORT).show())</div><div class="line">        .doOnError(throwable -&gt; Logger.e(throwable.getMessage()))</div><div class="line">        .subscribe();</div></pre></td></tr></table></figure>
<p>详细用法参见Demo，地址：<a href="https://github.com/Tailyou/OkRetrofit" target="_blank" rel="external">https://github.com/Tailyou/OkRetrofit</a></p>
]]></content>
      
        <categories>
            
            <category> 模块 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Retrofit </tag>
            
            <tag> 文件下载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【移动支付框架-AndroidPay】]]></title>
      <url>http://yoursite.com/2017/03/20/%E7%A7%BB%E5%8A%A8%E6%94%AF%E4%BB%98%E6%A1%86%E6%9E%B6-AndroidPay/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>移动支付框架，封装了微信支付、支付宝支付，两种支付方式保持了统一的使用风格，使用方便。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>最新版本0.0.1，compile ‘com.hengda.zwf:OkPay:0.0.1’</p>
<h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><h3 id="1、修改AndroidManifest-xml"><a href="#1、修改AndroidManifest-xml" class="headerlink" title="1、修改AndroidManifest.xml"></a>1、修改AndroidManifest.xml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;activity</div><div class="line">    android:name=&quot;com.hengda.zwf.androidpay.WXPayCallbackActivity&quot;</div><div class="line">    android:configChanges=&quot;orientation|keyboardHidden|navigation|screenSize&quot;</div><div class="line">    android:launchMode=&quot;singleTop&quot;</div><div class="line">    android:theme=&quot;@android:style/Theme.Translucent.NoTitleBar&quot; /&gt;</div><div class="line">&lt;activity-alias</div><div class="line">    android:name=&quot;.wxapi.WXPayEntryActivity&quot;</div><div class="line">    android:exported=&quot;true&quot;</div><div class="line">    android:targetActivity=&quot;com.hengda.zwf.androidpay.WXPayCallbackActivity&quot; /&gt;</div></pre></td></tr></table></figure>
<h3 id="2、微信支付"><a href="#2、微信支付" class="headerlink" title="2、微信支付"></a>2、微信支付</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * 微信支付</div><div class="line">     *</div><div class="line">     * @author 祝文飞（Tailyou）</div><div class="line">     * @time 2017/3/20 10:13</div><div class="line">     */</div><div class="line">    public void doWxpay(View view) &#123;</div><div class="line">        String payParam = &quot;&quot;;//pay param form server</div><div class="line">        WechatPay.getInstance(this, &quot;wxff989c97f26783b1&quot;).doPay(payParam, new WechatPay.WXPayResultCallBack() &#123;</div><div class="line">            @Override</div><div class="line">            public void onSuccess() &#123;</div><div class="line">                Toast.makeText(getApplication(), &quot;支付成功&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onError(int error_code) &#123;</div><div class="line">                switch (error_code) &#123;</div><div class="line">                    case WechatPay.NO_OR_LOW_WX:</div><div class="line">                        Toast.makeText(getApplication(), &quot;未安装微信或微信版本过低&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                    case WechatPay.ERROR_PAY_PARAM:</div><div class="line">                        Toast.makeText(getApplication(), &quot;参数错误&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                    case WechatPay.ERROR_PAY:</div><div class="line">                        Toast.makeText(getApplication(), &quot;支付失败&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                        break;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onCancel() &#123;</div><div class="line">                Toast.makeText(getApplication(), &quot;支付取消&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="3、支付宝支付"><a href="#3、支付宝支付" class="headerlink" title="3、支付宝支付"></a>3、支付宝支付</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">    * 支付宝支付</div><div class="line">    *</div><div class="line">    * @author 祝文飞（Tailyou）</div><div class="line">    * @time 2017/3/20 10:13</div><div class="line">    */</div><div class="line">   public void doAlipay(View view) &#123;</div><div class="line">       //pay param form server</div><div class="line">       String payParam = &quot;pay param form server&quot;;</div><div class="line">       Alipay.getInstance(this).doPay(payParam, new Alipay.AlipayResultCallBack() &#123;</div><div class="line">           @Override</div><div class="line">           public void onSuccess() &#123;</div><div class="line">               Toast.makeText(getApplication(), &quot;支付成功&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onDealing() &#123;</div><div class="line">               Toast.makeText(getApplication(), &quot;支付处理中...&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onError(int error_code) &#123;</div><div class="line">               switch (error_code) &#123;</div><div class="line">                   case Alipay.ERROR_RESULT:</div><div class="line">                       Toast.makeText(getApplication(), &quot;支付失败:支付结果解析错误&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                       break;</div><div class="line">                   case Alipay.ERROR_NETWORK:</div><div class="line">                       Toast.makeText(getApplication(), &quot;支付失败:网络连接错误&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                       break;</div><div class="line">                   case Alipay.ERROR_PAY:</div><div class="line">                       Toast.makeText(getApplication(), &quot;支付错误:支付码支付失败&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                       break;</div><div class="line">                   default:</div><div class="line">                       Toast.makeText(getApplication(), &quot;支付错误&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">                       break;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void onCancel() &#123;</div><div class="line">               Toast.makeText(getApplication(), &quot;支付取消&quot;, Toast.LENGTH_SHORT).show();</div><div class="line">           &#125;</div><div class="line">       &#125;);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>具体使用见demo。<br>项目地址：<a href="https://github.com/Tailyou/OkPay" target="_blank" rel="external">https://github.com/Tailyou/OkPay</a></p>
]]></content>
      
        <categories>
            
            <category> 模块 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 支付 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【通用提示弹框-OkDialog】]]></title>
      <url>http://yoursite.com/2017/03/17/%E9%80%9A%E7%94%A8%E6%8F%90%E7%A4%BA%E5%BC%B9%E6%A1%86-OkDialog/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>通用Dialog，适用于ProgressDialog，BuilderDialog，可以设置字体、进入退出动画，同时兼容手机和导览机。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>OkDialog已上传jcenter，直接在gradle中添加依赖即可。<br>compile ‘com.hengda.zwf:OkDialog:0.0.1’</p>
<h2 id="三、效果"><a href="#三、效果" class="headerlink" title="三、效果"></a>三、效果</h2><h3 id="1、ProgressDialog补间动画"><a href="#1、ProgressDialog补间动画" class="headerlink" title="1、ProgressDialog补间动画"></a>1、ProgressDialog补间动画</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/79120594-file_1486346779883_dc73.png" alt=""></p>
<h3 id="2、ProgressDialog帧动画"><a href="#2、ProgressDialog帧动画" class="headerlink" title="2、ProgressDialog帧动画"></a>2、ProgressDialog帧动画</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/49606317-file_1486346779998_c220.png" alt=""></p>
<h3 id="3、BuilderDialog默认布局"><a href="#3、BuilderDialog默认布局" class="headerlink" title="3、BuilderDialog默认布局"></a>3、BuilderDialog默认布局</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/95840505-file_1486346780216_7f00.png" alt=""></p>
<h3 id="4、BuilderDialog自定义布局"><a href="#4、BuilderDialog自定义布局" class="headerlink" title="4、BuilderDialog自定义布局"></a>4、BuilderDialog自定义布局</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-6/76351990-file_1486346780326_3ff9.png" alt=""></p>
<h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>此处以BuilderDialog自定义布局为例，简单介绍说使用，具体用法参见demo。<br>地址：<a href="https://github.com/Tailyou/OkDialog" target="_blank" rel="external">https://github.com/Tailyou/OkDialog</a></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 该方法通过提取文字参数和点击事件可以继续封装</div><div class="line"> *</div><div class="line"> * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line"> * <span class="doctag">@time</span> 2017/2/6 9:37</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showCustomDlg</span><span class="params">()</span> </span>&#123;</div><div class="line">    HDialogBuilder hDialogBuilder = <span class="keyword">new</span> HDialogBuilder(mContext);</div><div class="line">    View customView = View.inflate(mContext, R.layout.dialog_custom_view_all, <span class="keyword">null</span>);</div><div class="line">    TextView tvTitle = HdTool.getView(customView, R.id.tvTitle);</div><div class="line">    TextView tvMsg = HdTool.getView(customView, R.id.tvMsg);</div><div class="line">    TextView btnYes = HdTool.getView(customView, R.id.btnYes);</div><div class="line">    TextView btnNo = HdTool.getView(customView, R.id.btnNo);</div><div class="line">    tvTitle.setText(<span class="string">"注销"</span>);</div><div class="line">    tvMsg.setText(<span class="string">"退出账号可能会使连续登录记录归零，确定退出？"</span>);</div><div class="line">    btnYes.setText(<span class="string">"确定退出"</span>);</div><div class="line">    btnNo.setText(<span class="string">"取消"</span>);</div><div class="line">    btnYes.setOnClickListener(v -&gt; hDialogBuilder.dismiss());</div><div class="line">    btnNo.setOnClickListener(v -&gt; hDialogBuilder.dismiss());</div><div class="line">    hDialogBuilder.setCustomView(customView)</div><div class="line">            .dlgColor(Color.TRANSPARENT)</div><div class="line">            .cancelable(<span class="keyword">false</span>)</div><div class="line">            .show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>封装后:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showCustomDlg</span><span class="params">(String title, String msg, String txtYes, String txtNo,</span></span></div><div class="line">                           DialogClickListener dialogClickListener) &#123;</div><div class="line">    hDialogBuilder = <span class="keyword">new</span> HDialogBuilder(mContext);</div><div class="line">    View customView = View.inflate(mContext, R.layout.dialog_custom_view_all, <span class="keyword">null</span>);</div><div class="line">    TextView tvTitle = HdTool.getView(customView, R.id.tvTitle);</div><div class="line">    TextView tvMsg = HdTool.getView(customView, R.id.tvMsg);</div><div class="line">    TextView btnYes = HdTool.getView(customView, R.id.btnYes);</div><div class="line">    TextView btnNo = HdTool.getView(customView, R.id.btnNo);</div><div class="line">    tvTitle.setText(title);</div><div class="line">    tvMsg.setText(msg);</div><div class="line">    btnYes.setText(txtYes);</div><div class="line">    btnNo.setText(txtNo);</div><div class="line">    btnYes.setOnClickListener(v -&gt; dialogClickListener.p());</div><div class="line">    btnNo.setOnClickListener(v -&gt; dialogClickListener.n());</div><div class="line">    hDialogBuilder.setCustomView(customView)</div><div class="line">                    .dlgColor(Color.TRANSPARENT)</div><div class="line">                    .cancelable(<span class="keyword">false</span>)</div><div class="line">                    .show();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>封装好之后，可以写到工具类中供直接调用.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 作者：Tailyou （祝文飞）</div><div class="line"> * 时间：2016/5/26 19:03</div><div class="line"> * 邮箱：tailyou@163.com</div><div class="line"> * 描述：Dialog工具类</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DialogCenter</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> HDialogBuilder hDialogBuilder;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 封装好的方法可以写到DialogCenter工具类中，供直接调用</div><div class="line">     *</div><div class="line">     * <span class="doctag">@author</span> 祝文飞（Tailyou）</div><div class="line">     * <span class="doctag">@time</span> 2017/2/6 9:39</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showCustomDlg</span><span class="params">(Context mContext, String title, String msg, String txtYes, String txtNo,</span></span></div><div class="line">                               DialogClickListener dialogClickListener) &#123;</div><div class="line">        hideDialog();</div><div class="line">        hDialogBuilder = <span class="keyword">new</span> HDialogBuilder(mContext);</div><div class="line"></div><div class="line">        View customView = View.inflate(mContext, R.layout.dialog_custom_view_all, <span class="keyword">null</span>);</div><div class="line">        TextView tvTitle = HdTool.getView(customView, R.id.tvTitle);</div><div class="line">        TextView tvMsg = HdTool.getView(customView, R.id.tvMsg);</div><div class="line">        TextView btnYes = HdTool.getView(customView, R.id.btnYes);</div><div class="line">        TextView btnNo = HdTool.getView(customView, R.id.btnNo);</div><div class="line">        tvTitle.setText(title);</div><div class="line">        tvMsg.setText(msg);</div><div class="line">        btnYes.setText(txtYes);</div><div class="line">        btnNo.setText(txtNo);</div><div class="line">        btnYes.setOnClickListener(v -&gt; dialogClickListener.p());</div><div class="line">        btnNo.setOnClickListener(v -&gt; dialogClickListener.n());</div><div class="line"></div><div class="line">        hDialogBuilder.setCustomView(customView)</div><div class="line">                        .dlgColor(Color.TRANSPARENT)</div><div class="line">                        .cancelable(<span class="keyword">false</span>)</div><div class="line">                        .show();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 隐藏Dialog</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hideDialog</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (hDialogBuilder != <span class="keyword">null</span>) &#123;</div><div class="line">            hDialogBuilder.dismiss();</div><div class="line">            hDialogBuilder = <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 模块 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Dialog </tag>
            
            <tag> ProgressDialog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【通用数据适配器-OkAdapter】]]></title>
      <url>http://yoursite.com/2017/03/17/%E9%80%9A%E7%94%A8%E6%95%B0%E6%8D%AE%E9%80%82%E9%85%8D%E5%99%A8-OkAdapter/</url>
      <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>通用Adapter，适用于单布局ListView、多布局ListView、单布局RecyclerView，多布局RecyclerView，带章节标题RecyclerView，GridView与ViewPage结合使用等情况。</p>
<h2 id="二、版本"><a href="#二、版本" class="headerlink" title="二、版本"></a>二、版本</h2><p>最新版本1.0.2，直接在gradle中添加即可。<br>compile ‘com.hengda.zwf:CommonAdapter:1.0.2’</p>
<h2 id="三、效果"><a href="#三、效果" class="headerlink" title="三、效果"></a>三、效果</h2><h3 id="1、单布局ListView"><a href="#1、单布局ListView" class="headerlink" title="1、单布局ListView"></a>1、单布局ListView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/89062263-file_1486106094623_13cca.png" alt=""></p>
<h3 id="2、多布局ListView"><a href="#2、多布局ListView" class="headerlink" title="2、多布局ListView"></a>2、多布局ListView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/95414587-file_1486106094743_467a.png" alt=""></p>
<h3 id="3、单布局RecyclerView"><a href="#3、单布局RecyclerView" class="headerlink" title="3、单布局RecyclerView"></a>3、单布局RecyclerView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/7801613-file_1486106094857_1789f.png" alt=""></p>
<h3 id="4、多布局RecyclerView"><a href="#4、多布局RecyclerView" class="headerlink" title="4、多布局RecyclerView"></a>4、多布局RecyclerView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/51561209-file_1486106094971_210f.png" alt=""></p>
<h3 id="5、章节标题RecyclerView"><a href="#5、章节标题RecyclerView" class="headerlink" title="5、章节标题RecyclerView"></a>5、章节标题RecyclerView</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/79560240-file_1486106095086_dd99.png" alt=""></p>
<h3 id="6、GridView结合ViewPage"><a href="#6、GridView结合ViewPage" class="headerlink" title="6、GridView结合ViewPage"></a>6、GridView结合ViewPage</h3><p><img src="http://oksdjdocc.bkt.clouddn.com/17-2-3/4686495-file_1486106094388_21d9.png" alt=""></p>
<h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><p>具体用法见demo。<br>地址：<a href="https://github.com/Tailyou/OkAdapter" target="_blank" rel="external">https://github.com/Tailyou/OkAdapter</a></p>
]]></content>
      
        <categories>
            
            <category> 模块 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Adapter </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
